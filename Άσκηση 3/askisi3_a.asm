.arm
.text
.global main

main:
STMDB R13!, {R0-R12, R14}

MOV R0, #94 @Μεταφέρουμε στον R0 τη τιμή 94
MOV R1, R0, LSR #1 @Μεταφέρουμε το περιεχόμενο του R0 στον R1
ολισθημένο κατά μια θέση δεξιά, δηλαδή στην ουσία διαιρούμε το 94 με
το 2 και το αποθηκεύουμε στον R1

ADDS R2, R0, R0 @Στην ουσία διπλασιάζουμε τη τιμή του R0 και την
αποθηκεύουμε στον R2 ενημερώνοντας παράλληλα και τις σημαίες του
καταχωρητή κατάστασης (N, C, Z, V)
ADDS R2, R1, R1 @Στην ουσία διπλασιάζουμε τη τιμή του R1 και την
αποθηκεύουμε στον R2 ενημερώνοντας παράλληλα και τις σημαίες του
καταχωρητή κατάστασης (N, C, Z, V)
ADDS R2, R0, R1 @Προσθέτουμε τις τιμές των R0, R1 και το αποτέλεσμα
το αποθηκεύουμε στον R2 ενημερώνοντας παράλληλα και τις σημαίες του
καταχωρητή κατάστασης (N, C, Z, V)

MOV R0, #0x80000000 @Μεταφέρουμε στον R0 τη τιμή 80000000 σε ΗΕΧ
ADD R1, R0, #0x80 @Προσθέτουμε στην αρχική τιμή του R0 το 80 σε
ΗΕΧ και το αποτέλεσμα το αποθηκεύουμε στον R1
MOV R2, #1 @Μεταφέρουμε στον R2 τη τιμή 1

SUBS R3, R0, R2 @Αφαιρούμε τη τιμή του R2 από τη τιμή του R0 και
το αποτέλεσμα το αποθηκεύουμε στον R3 ενημερώνοντας παράλληλα και τις
σημαίες του καταχωρητή κατάστασης (N, C, Z, V)

SUBS R3, R0, R1 @Αφαιρούμε τη τιμή του R1 από τη τιμή του R0 και
το αποτέλεσμα το αποθηκεύουμε στον R3 ενημερώνοντας παράλληλα και τις
σημαίες του καταχωρητή κατάστασης (N, C, Z, V)
RSBS R3, R0, R1 @Αφαιρούμε τη τιμή του R0 από τη τιμή του R1 και
το αποτέλεσμα το αποθηκεύουμε στον R3 ενημερώνοντας παράλληλα και τις
σημαίες του καταχωρητή κατάστασης (N, C, Z, V)

LDMIA R13!, {R0-R12, PC}
