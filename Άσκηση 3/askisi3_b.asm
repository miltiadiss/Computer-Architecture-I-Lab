.arm
.text
.global main
main:
STMDB R13!, {R0-R12, R14}
LDR R1, = Stor @Ο R1 δείχνει στις 6 θέσεις μνήμης του πίνακα Stor
MOV R0, #0 @Μεταφέρουμε στον R0 τη τιμή 0 και θα τον χρησιμοποιήσουμε
ως μετρητή στο βρόχο επανάληψης
STR R0, [R1], #4 @Αποθηκεύουμε τη τιμή 0 του R0 στον R1 και θέλουμε
μετά να δείχνουμε στο επόμενο στοιχείο του πίνακα Stor το οποίο απέχει
4 bytes από το προηγούμενο μέσα στη μνήμη
Startpoint:
ADD R0, R0, #1 @Αυξάνουμε την τιμή του R0 - μετρητή κατά 1
STR R0, [R1], #4 @Αποθηκεύουμε κάθε φορά τη τιμή του R0 στον R1 και
θέλουμε μετά να δείχνουμε στο επόμενο στοιχείο του πίνακα Stor το
οποίο απέχει 4 bytes από το προηγούμενο μέσα στη μνήμη
CMP R0, #5 @Όσο το περιεχόμενο του R0 δεν είναι 5 ο βρόχος
επαναλαμβάνεται προκειμένου να αποθηκεύσουμε στις υπόλοιπες 5 θέσεις
μνήμης του πίνακα Stor τους αριθμούς από 1 ως 6
BNE Startpoint
LDMIA R13!, {R0-R12, PC}
.data
Stor:
.word 0,0,0,0,0,0
